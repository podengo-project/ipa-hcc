---
- hosts: ipaclient
  become: true
  become_method: sudo

  vars:
    compose_env:
      COMPOSE_FILE: "deployments/backend-compose.yaml"
      # force local image
      CONTAINER_IMAGE_BASE: "hmsidm-backend"

  tasks:
    - name: Provision idm-domains-backend
      when: meta_role == 'backend'
      block:
        - include_vars:
            file: "{{ playbook_dir }}/../config/hmsidm-config.yaml"
            name: hmsidm_config

        - name: Enable code ready builder CRB for EPEL
          shell: yum config-manager --set-enabled "*CRB*"

        - name: Enable EPEL for podman-compose
          yum:
              name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
              disable_gpg_check: yes
              state: present

        - name: Gather the rpm package facts
          package_facts:
            manager: auto

        - name: Install build dependencies
          yum:
            name:
              - git
              - golang
              - make
              - podman
              - podman-compose
            state: latest

        - name: Git checkout idm-domains-backend
          ansible.builtin.git:
            repo: "{{ hmsidm_config.backend_git_repo }}"
            version: "{{ hmsidm_config.backend_git_branch }}"
            dest: /idm-domains-backend

        - name: Pull external images (podman-compose pull)
          command: timeout 180 make compose-pull
          args:
            chdir: /idm-domains-backend
          environment: "{{ compose_env }}"

        - name: Build local images (podman-compose build)
          command: make compose-build
          args:
            chdir: /idm-domains-backend
          environment: "{{ compose_env }}"

        - name: Clean compose
          command: make compose-clean
          args:
            chdir: /idm-domains-backend
          environment: "{{ compose_env }}"

        - name: Start compose (podman-compose up)
          command: timeout 180 make compose-up
          args:
            chdir: /idm-domains-backend
          environment: "{{ compose_env }}"

        - name: Create domain
          command: scripts/get-ipa-hcc-register.py --compose localhost:8000
          args:
            chdir: /idm-domains-backend
          register: ipahccregister

        - name: Print ipa-hcc register command
          debug:
            msg="{{ ipahccregister.stdout }}"

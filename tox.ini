[tox]
envlist = py,py27,py36,lint,format,bandit,jslint,yamllint,pylint2,pylint3,rpkg,maketest,cov

[testenv]
passenv = HOME
skipsdist = true
skip_install = true
# dnf install gcc python3-devel krb5-devel glib2-devel dbus-devel dbus-daemon gobject-introspection-devel cairo-devel cairo-gobject-devel
deps =
    ipaclient
    requests
    coverage[toml]
    dbus-python
    pygobject
commands =
    {envpython} -m compileall -q \
      tests/ \
      ipahcc/ \
      ipaserver/
    {envpython} -Wignore -m coverage run -m unittest discover -v -s {posargs} tests/

[testenv:py]
# load ipaclient, ipaserver from global site-packages
sitepackages = true
deps =
    {[testenv]deps}
    jsonschema 

[testenv:py36]
sitepackages = true
deps =
    {[testenv]deps}
    # register_interface
    cryptography < 38.0
    jsonschema < 3.0

[testenv:py27]
sitepackages = true
deps =
    {[testenv]deps}
    jsonschema == 2.6
    mock

[testenv:cov]
deps =
    coverage[toml]
commands =
    {envpython} -m coverage combine
    {envpython} -m coverage html
    {envpython} -m coverage report

[testenv:lint]
deps = flake8
commands =
    flake8 {posargs}

[testenv:pylint3]
sitepackages = true
deps =
    pylint
commands =
    {envpython} -m pylint \
        ipahcc \
        ipaserver/install/plugins/update_hcc_enrollment_service.py \
        ipaserver/install/plugins/update_hcc.py \
        ipaserver/plugins/hccconfig.py \
        ipaserver/plugins/hcchost.py \
        ipaserver/plugins/hccserverroles.py \
        tests/conftest.py \
        tests/test_autoenrollment.py \
        tests/test_hccapi.py \
        tests/test_mockapi.py \
        tests/test_registration.py \
        tests/tests.py

[testenv:pylint2]
basepython = python2.7
deps =
    {[testenv:pylint3]deps}
    {[testenv:py27]deps}
commands = {[testenv:pylint3]commands}

[testenv:format]
deps = black
commands =
    black --check --diff {posargs:.}

[testenv:bandit]
deps = bandit
commands =
    bandit -r -ll \
      tests.py \
      ipahcc/ \
      ipaserver/ \
      install/mockapi/wsgi/ \
      install/registration/wsgi/

[testenv:jslint]
deps =
changedir = {envdir}
whitelist_externals = npm
commands =
    npm install --silent eslint@latest
    {envdir}/node_modules/.bin/eslint \
        -c {toxinidir}/.eslintrc.json \
        {toxinidir}/install/server/ui/js/

[testenv:yamllint]
deps =
changedir = {envdir}
whitelist_externals = yamllint
commands =
    yamllint --strict .

[testenv:rpkg]
deps = {[testenv:py]deps}
skipsdist = true
whitelist_externals = make
commands =
    make rpkg

[testenv:maketest]
deps =
skipsdist = true
whitelist_externals = make
commands =
    make test

[flake8]
show-source = True
max-line-length = 100
ignore = E203,W503
exclude = .git,.tox,dist,*egg

%if 0%{?rhel}
# RHEL 8 or 9
%global package_name ipa-hcc
%global alt_name freeipa-hcc
%global ipa_name ipa

# PKINIT feature was added to ipa-client in 4.9.11 and 4.10.1.
# The server plugins and registration service does not depend
# on new features.
%if 0%{?rhel} >= 9
  %global ipa_client_pkinit_version 4.10.1
  %global ipa_version 4.10
%elif 0%{?rhel} == 8
  %global ipa_client_pkinit_version 4.9.11
  %global ipa_version 4.9
%elif 0%{?rhel} == 7
  %global ipa_client_pkinit_version 4.6
  %global ipa_version 4.6
%endif
%else
# Fedora
%global package_name ipa-hcc
%global alt_name freeipa-hcc
%global ipa_name freeipa
%global ipa_client_pkinit_version 4.10.1
%global ipa_version 4.10
%endif

Name:           %{package_name}
Version:        {{{ git_dir_version }}}
Release:        1%{?dist}
Summary:        Hybrid Cloud Console extension for IPA

BuildArch:      noarch

License:        GPLv3+
URL:            https://gitlab.cee.redhat.com/identity-management/idmocp/ipa-consoledot
VCS:            {{{ git_dir_vcs }}}
Source:         {{{ git_dir_pack }}}

%if 0%{?rhel} == 7
BuildRequires: python2-devel
%else
BuildRequires: python3-devel
%endif
BuildRequires: systemd-devel
BuildRequires: selinux-policy-devel

%description
An extension for IPA integration with Red Hat Hybrid Cloud Console.


%package common
Summary: Common files for IPA Hybrid Cloud Console extension
BuildArch: noarch

Provides: %{alt_name}-common = %{version}
Conflicts: %{alt_name}-common
Obsoletes: %{alt_name}-common < %{version}
Requires: %{ipa_name}-client >= %{ipa_version}

%description common
This package contains common files for IPA Hybrid Cloud Console extension.

%if 0%{?rhel} >= 8 || 0%{?fedora}
# server plugin and registration service are RHEL 8 or newer

%package server-plugin
Summary: Server plugin for IPA Hybrid Cloud Console extension
BuildArch: noarch

Provides: %{alt_name}-server-plugin = %{version}
Conflicts: %{alt_name}-server-plugin
Obsoletes: %{alt_name}-server-plugin < %{version}
Requires: %{package_name}-common = %{version}
Requires: %{ipa_name}-server >= %{ipa_version}
Requires(post): %{ipa_name}-server >= %{ipa_version}
%{?systemd_requires}

%description server-plugin
This package contains server plugins and WebUI for IPA Hybrid Cloud Console
extension.

%posttrans server-plugin
python3 -c "import sys; from ipaserver.install import installutils; sys.exit(0 if installutils.is_ipa_configured() else 1);" > /dev/null 2>&1

if [ $? -eq 0 ]; then
    /usr/sbin/ipa-ldap-updater --quiet \
        --schema-file=%{_datadir}/ipa/schema.d/85-hcc.ldif \
        %{_datadir}/ipa/updates/85-hcc.update

    # restart httpd if running
    /bin/systemctl try-restart httpd.service >/dev/null 2>&1 || :
fi

%postun server-plugin
# remove pkinit_anchors line from KRB5 KDC config
sed --in-place=.bak '/\/usr\/share\/ipa-hcc\/redhat-candlepin-bundle.pem/d' /var/kerberos/krb5kdc/kdc.conf || :


%package registration-service
Summary: Registration service for IPA Hybrid Cloud Console extension
BuildArch: noarch

Provides:       %{alt_name}-registration-service = %{version}
Conflicts: %{alt_name}-registration-service
Obsoletes: %{alt_name}-registration-service < %{version}
# Don't allow installation on an IPA server?
Requires: %{package_name}-common = %{version}
Requires: httpd
Requires: python3-mod_wsgi
Requires: mod_ssl
# run transaction after server-plugin IFF the package is installed
OrderWithRequires: %{package_name}-server-plugin
%{?selinux_requires}
%{?systemd_requires}

%description registration-service
This package contains the registration service for
IPA Hybrid Cloud Console extension

%pre registration-service
# create user account for service
getent passwd ipahcc >/dev/null || useradd -r -g ipaapi -s /sbin/nologin -d / -c "IPA Hybrid Cloud Console enrollment service" ipahcc

%post registration-service
# SELinux context for cache dir
/usr/sbin/semanage fcontext -a -f a -s system_u -t httpd_cache_t -r 's0' '/var/cache/ipa-hcc(/.*)?' 2>/dev/null || :
/usr/sbin/restorecon -R /var/cache/ipa-hcc || :

%posttrans registration-service
python3 -c "import sys; from ipaserver.install import installutils; sys.exit(0 if installutils.is_ipa_configured() else 1);" > /dev/null 2>&1

if [ $? -eq 0 ]; then
    # update/create HCC enrollment service
    /usr/sbin/ipa-ldap-updater --quiet \
        %{_datadir}/ipa/updates/86-hcc-enrollment-service.update

    # pick up new gssproxy and HTTPD config (restart if running)
    /bin/systemctl try-restart gssproxy.service httpd.service
fi

%postun registration-service
/usr/sbin/semanage fcontext -d '/var/cache/ipa-hcc(/.*)?' 2>/dev/null || :

# RHEL >= 8
%endif

%package client-enrollment
Summary: Automatic IPA client enrollment for Hybrid Cloud Console
BuildArch: noarch

Provides:  %{alt_name}-client-enrollment = %{version}
Conflicts: %{alt_name}-client-enrollment
Obsoletes: %{alt_name}-client-enrollment < %{version}
Requires: %{package_name}-common = %{version}
Requires: %{ipa_name}-client >= %{ipa_client_pkinit_version}
%if 0%{?rhel} == 7
Requires: python2-requests
%else
Requires: python3-requests
%endif
Requires: krb5-pkinit
Requires: rhc
%{?systemd_requires}

%description client-enrollment
This package contains the automatic enrollment service of IPA clients.

%post client-enrollment
%systemd_post ipa-hcc-auto-enrollment.service
/bin/systemctl daemon-reload

%preun client-enrollment
%systemd_preun ipa-hcc-auto-enrollment.service

%postun client-enrollment
%systemd_postun_with_restart ipa-hcc-auto-enrollment.service


%prep
{{{ git_dir_setup_macro }}}

%build
touch debugfiles.list

%install
rm -rf $RPM_BUILD_ROOT

# common
%__mkdir_p %{buildroot}%{_sysconfdir}/ipa/hcc

%__mkdir_p %{buildroot}%{_datadir}/ipa-hcc
%__mkdir_p %{buildroot}%{_datadir}/ipa-hcc/cacerts
cp -p rhsm/redhat-candlepin-bundle.pem %{buildroot}%{_datadir}/ipa-hcc/
cp -pd rhsm/cacerts/* %{buildroot}%{_datadir}/ipa-hcc/cacerts/

%if 0%{?rhel} == 7
%__mkdir_p %{buildroot}%{python2_sitelib}/ipaplatform
cp -p ipaplatform/*.py %{buildroot}%{python2_sitelib}/ipaplatform/
%else
%__mkdir_p %{buildroot}%{python3_sitelib}/ipaplatform
cp -p ipaplatform/*.py %{buildroot}%{python3_sitelib}/ipaplatform/
%endif

%if 0%{?rhel} >= 8 || 0%{?fedora}
# server-plugin
%__mkdir_p %{buildroot}%{python3_sitelib}/ipaserver/plugins
cp -p ipaserver/plugins/*.py %{buildroot}%{python3_sitelib}/ipaserver/plugins/

%__mkdir_p %{buildroot}%{python3_sitelib}/ipaserver/install/plugins
cp -p ipaserver/install/plugins/update_hcc.py %{buildroot}%{python3_sitelib}/ipaserver/install/plugins/

%__mkdir_p %buildroot/%{_datadir}/ipa/schema.d
cp -p schema.d/*.ldif %buildroot/%{_datadir}/ipa/schema.d/

%__mkdir_p %buildroot/%{_datadir}/ipa/updates
cp -p updates/85-hcc.update %buildroot/%{_datadir}/ipa/updates/

%__mkdir_p %buildroot/%{_datadir}/ipa/ui/js/plugins
for j in $(find ui/ -name '*.js') ; do
    destdir=%buildroot/%{_datadir}/ipa/ui/js/plugins/$(basename ${j%.js})
    %__mkdir_p $destdir
    %__cp -p $j $destdir/
done

# registration service
%__mkdir_p %{buildroot}%{_localstatedir}/cache/ipa-hcc

cp -p ipaserver/install/plugins/update_hcc_enrollment_service.py %{buildroot}%{python3_sitelib}/ipaserver/install/plugins/

cp -p wsgi/hcc_registration_service.py %{buildroot}%{_datadir}/ipa-hcc/

cp -p updates/86-hcc-enrollment-service.update %buildroot/%{_datadir}/ipa/updates/

%__mkdir_p %{buildroot}%{_sysconfdir}/httpd/conf.d/
cp apache/ipa-hcc.conf %{buildroot}%{_sysconfdir}/httpd/conf.d/ipa-hcc.conf

%__mkdir_p %{buildroot}%{_sysconfdir}/gssproxy
cp gssproxy/85-ipa-hcc.conf %{buildroot}%{_sysconfdir}/gssproxy/85-ipa-hcc.conf

%__mkdir_p %{buildroot}%{_sharedstatedir}/ipa/gssproxy
touch %{buildroot}%{_sharedstatedir}/ipa/gssproxy/hcc-enrollment.keytab

# RHEL >= 8
%endif

# client
%__mkdir_p %{buildroot}%{_unitdir}
cp -p client/ipa-hcc-auto-enrollment.service %{buildroot}%{_unitdir}/
%__mkdir_p %{buildroot}%{_libexecdir}/ipa/hcc/
cp -p client/ipa-hcc-auto-enrollment.py %{buildroot}%{_libexecdir}/ipa/hcc/

%if 0%{?rhel} == 7
sed -i -e '1 s|^#!.*\bpython[^ ]*|#!%{__python2}|' %{buildroot}%{_libexecdir}/ipa/hcc/*.py
%endif


%files common
%doc README.md CONTRIBUTORS.txt
%license COPYING
%attr(0750,ipahcc,root) %dir %{_sysconfdir}/ipa/hcc
%dir %{_datadir}/ipa-hcc/
%{_datadir}/ipa-hcc/redhat-candlepin-bundle.pem
%{_datadir}/ipa-hcc/cacerts
%if 0%{?rhel} == 7
%{python2_sitelib}/ipaplatform/*.py*
%else
%{python3_sitelib}/ipaplatform/*.py
%{python3_sitelib}/ipaplatform/__pycache__/*.pyc
%endif

%if 0%{?rhel} >= 8 || 0%{?fedora}

%files server-plugin
%doc README.md CONTRIBUTORS.txt
%license COPYING
%{python3_sitelib}/ipaserver/plugins/*.py
%{python3_sitelib}/ipaserver/plugins/__pycache__/*.pyc
%{python3_sitelib}/ipaserver/install/plugins/update_hcc.py
%{python3_sitelib}/ipaserver/install/plugins/__pycache__/update_hcc.*.pyc
%{_datadir}/ipa/schema.d/85-hcc.ldif
%{_datadir}/ipa/updates/85-hcc.update
%{_datadir}/ipa/ui/js/plugins/*
%ghost %{_sharedstatedir}/ipa/gssproxy/hcc-enrollment.keytab


%files registration-service
%doc README.md CONTRIBUTORS.txt
%license COPYING
%attr(0755,ipahcc,ipaapi) %dir %{_localstatedir}/cache/ipa-hcc
%{python3_sitelib}/ipaserver/install/plugins/update_hcc_enrollment_service.py
%{python3_sitelib}/ipaserver/install/plugins/__pycache__/update_hcc_enrollment_service.*.pyc
%{_datadir}/ipa-hcc/hcc_registration_service.py
%{_datadir}/ipa/updates/86-hcc-enrollment-service.update
%attr(0644,root,root) %config(noreplace) %{_sysconfdir}/httpd/conf.d/ipa-hcc.conf
%attr(0644,root,root) %config(noreplace) %{_sysconfdir}/gssproxy/85-ipa-hcc.conf

# RHEL >= 8
%endif

%files client-enrollment
%doc README.md CONTRIBUTORS.txt
%license COPYING
%attr(0755,root,root) %dir %{_libexecdir}/ipa/hcc
%attr(0755,root,root) %{_libexecdir}/ipa/hcc/ipa-hcc-auto-enrollment.py
%if 0%{?rhel} == 7
# TODO: get rid of byte-compiled code on RHEL 7
%{_libexecdir}/ipa/hcc/*.py[co]
%endif
%attr(0644,root,root) %{_unitdir}/ipa-hcc-auto-enrollment.service


%changelog
{{{ git_dir_changelog }}}

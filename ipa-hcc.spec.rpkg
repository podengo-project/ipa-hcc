%if 0%{?rhel}
  # RHEL 7, 8, 9
  %global package_name ipa-hcc
  %global alt_name freeipa-hcc
  %global ipa_name ipa

  # ipa-client-install supports PKINIT options since 4.9.11 (RHEL 8.8)
  # and 4.10.1 (RHEL 9.2). Older clients use krb5-pkinit + ipa-getkeytab
  # fallback.
  %if 0%{?rhel} >= 9
    # RHEL 9.0 EUS has 4.9.8-8.el9_0
    %global ipa_version 4.9.8
    %global with_server_plugin 1
    %global with_registration_service 1
  %else
  # elif doesn't work here?
  %if 0%{?rhel} == 8
    # RHEL 8.4 EUS has 4.9.2
    # RHEL 8.6 EUS has 4.9.8
    %global ipa_version 4.9.2
    %global with_platform_python 1
    %global with_server_plugin 1
    %global with_registration_service 1
  %else
    # RHEL 7.9 has 4.6.8-5.el7_9
    %global ipa_version 4.6.8
    %global with_python2 1
    %global with_server_plugin 1
    %global with_registration_service 1
  %endif
  %endif
%else
  # Fedora (for development only)
  %global package_name ipa-hcc
  %global alt_name freeipa-hcc
  %global ipa_name freeipa
  %global ipa_version 4.10
  %global with_server_plugin 1
  %global with_registration_service 1
%endif

# --without mockapi (enabled by default)
%bcond_without mockapi

%if %{with python2}
  %global python %{__python2}
  %global python_sitelib %{python2_sitelib}
  #global with_pycache 0
%else
  %if %{with platform_python}
    %global python /usr/libexec/platform-python
  %else
    %global python %{__python3}
  %endif
  %global python_sitelib %{python3_sitelib}
  %global with_pycache 1
%endif


Name:           %{package_name}
Version:        {{{ git_dir_version }}}
Release:        1%{?dist}
Summary:        Hybrid Cloud Console extension for IPA

BuildArch:      noarch

License:        GPLv3+
URL:            https://gitlab.cee.redhat.com/identity-management/idmocp/ipa-consoledot
VCS:            {{{ git_dir_vcs }}}
Source:         {{{ git_dir_pack }}}

%if %{with python2}
BuildRequires: python2-devel
%if %{with registration_service} || %{with server_plugin}
BuildRequires: python2-ipaserver >= %{ipa_version}
%else
BuildRequires: python2-ipaclient >= %{ipa_version}
%endif
BuildRequires: python2-requests
BuildRequires: python-sssdconfig
%else
BuildRequires: python3-devel
%if %{with registration_service} || %{with server_plugin}
BuildRequires: python3-ipaserver >= %{ipa_version}
%else
BuildRequires: python3-ipaclient >= %{ipa_version}
%endif
BuildRequires: python3-requests
BuildRequires: python3-sssdconfig
%endif
BuildRequires: systemd-devel
BuildRequires: selinux-policy-devel


%description
An extension for IPA integration with Red Hat Hybrid Cloud Console.


%package common
Summary: Common files for IPA Hybrid Cloud Console extension
BuildArch: noarch

Provides: %{alt_name}-common = %{version}
Conflicts: %{alt_name}-common
Obsoletes: %{alt_name}-common < %{version}
Requires: %{ipa_name}-client >= %{ipa_version}

%description common
This package contains common files for IPA Hybrid Cloud Console extension.


%if %{with server_plugin}
%package server-plugin
Summary: Server plugin for IPA Hybrid Cloud Console extension
BuildArch: noarch

Provides: %{alt_name}-server-plugin = %{version}
Conflicts: %{alt_name}-server-plugin
Obsoletes: %{alt_name}-server-plugin < %{version}
Requires: %{package_name}-common = %{version}
Requires: %{ipa_name}-server >= %{ipa_version}
Requires(post): %{ipa_name}-server >= %{ipa_version}
%{?systemd_requires}

%description server-plugin
This package contains server plugins and WebUI for IPA Hybrid Cloud Console
extension.

%posttrans server-plugin
%{python} -c "import sys; from ipaserver.install import installutils; sys.exit(0 if installutils.is_ipa_configured() else 1);" > /dev/null 2>&1

if [ $? -eq 0 ]; then
    /usr/sbin/ipa-ldap-updater --quiet \
        --schema-file=%{_datadir}/ipa/schema.d/85-hcc.ldif \
        %{_datadir}/ipa/updates/85-hcc.update

    # restart httpd if running
    /bin/systemctl try-restart httpd.service >/dev/null 2>&1 || :
fi

%postun server-plugin
# remove pkinit_anchors line from KRB5 KDC config
sed --in-place=.bak '/\/usr\/share\/ipa-hcc\/redhat-candlepin-bundle.pem/d' /var/kerberos/krb5kdc/kdc.conf || :
# server-plugin
%endif


%if %{with registration_service}
%package registration-service
Summary: Registration service for IPA Hybrid Cloud Console extension
BuildArch: noarch

Provides:       %{alt_name}-registration-service = %{version}
Conflicts: %{alt_name}-registration-service
Obsoletes: %{alt_name}-registration-service < %{version}
# Don't allow installation on an IPA server?
Requires: %{package_name}-common = %{version}
Requires: httpd
%if 0%{?with_python2}
Requires: mod_wsgi
Requires: mod_nss
%else
Requires: python3-mod_wsgi
Requires: mod_ssl
%endif
# run transaction after server-plugin IFF the package is installed
OrderWithRequires: %{package_name}-server-plugin
Requires: selinux-policy
Requires(post): selinux-policy
%{?systemd_requires}

%description registration-service
This package contains the registration service for
IPA Hybrid Cloud Console extension

%pre registration-service
# create user account for service
getent passwd ipahcc >/dev/null || useradd -r -g ipaapi -s /sbin/nologin -d / -c "IPA Hybrid Cloud Console enrollment service" ipahcc

%post registration-service
# SELinux context for cache dir
/usr/sbin/semanage fcontext -a -f a -s system_u -t httpd_cache_t -r 's0' '/var/cache/ipa-hcc(/.*)?' 2>/dev/null || :
/usr/sbin/restorecon -R /var/cache/ipa-hcc || :

%posttrans registration-service
python3 -c "import sys; from ipaserver.install import installutils; sys.exit(0 if installutils.is_ipa_configured() else 1);" > /dev/null 2>&1

if [ $? -eq 0 ]; then
    # update/create HCC enrollment service
    /usr/sbin/ipa-ldap-updater --quiet \
        %{_datadir}/ipa/updates/86-hcc-enrollment-service.update

    # pick up new gssproxy and HTTPD config (restart if running)
    /bin/systemctl try-restart gssproxy.service httpd.service
fi

%postun registration-service
/usr/sbin/semanage fcontext -d '/var/cache/ipa-hcc(/.*)?' 2>/dev/null || :

# registration-service
%endif

%if %{with mockapi}
%package mockapi
Summary: Automatic IPA client enrollment: Mock API
BuildArch: noarch

Provides:  %{alt_name}-mockapi = %{version}
Conflicts: %{alt_name}-mockapi
Obsoletes: %{alt_name}-mockapi < %{version}
Requires: %{package_name}-registration-service = %{version}
Requires: %{ipa_name}-client >= %{ipa_version}
%if 0%{?with_python2}
Requires: python2-requests
%else
Requires: python3-requests
%endif
%{?systemd_requires}


%description mockapi
This package contains a Mock API for testing of automatic enrollment service
of IPA clients.


%posttrans mockapi
/bin/systemctl try-restart httpd.service

# mockapi
%endif

%package client-enrollment
Summary: Automatic IPA client enrollment for Hybrid Cloud Console
BuildArch: noarch

Provides:  %{alt_name}-client-enrollment = %{version}
Conflicts: %{alt_name}-client-enrollment
Obsoletes: %{alt_name}-client-enrollment < %{version}
Requires: %{package_name}-common = %{version}
Requires: %{ipa_name}-client >= %{ipa_version}
%if 0%{?with_python2}
Requires: python2-requests
%else
Requires: python3-requests
%endif
Requires: krb5-pkinit
# RHEL 7 has no weak dependency "Recommends"
Requires: rhc
Requires: insights-client
%{?systemd_requires}

%description client-enrollment
This package contains the automatic enrollment service of IPA clients.

%post client-enrollment
%systemd_post ipa-hcc-auto-enrollment.service
/bin/systemctl daemon-reload

%preun client-enrollment
%systemd_preun ipa-hcc-auto-enrollment.service

%postun client-enrollment
%systemd_postun_with_restart ipa-hcc-auto-enrollment.service


%prep
{{{ git_dir_setup_macro }}}


%build
touch debugfiles.list


%check
%{python} -Wignore -m unittest discover


%install
rm -rf $RPM_BUILD_ROOT

# common
%__mkdir_p %{buildroot}%{_sysconfdir}/ipa
cp -p etc/ipa/hcc.conf %{buildroot}%{_sysconfdir}/ipa/hcc.conf

%__mkdir_p %{buildroot}%{_datadir}/ipa-hcc
%__mkdir_p %{buildroot}%{_datadir}/ipa-hcc/cacerts
cp -p rhsm/redhat-candlepin-bundle.pem %{buildroot}%{_datadir}/ipa-hcc/
cp -pd rhsm/cacerts/* %{buildroot}%{_datadir}/ipa-hcc/cacerts/

%__mkdir_p %{buildroot}%{python_sitelib}/ipaplatform
cp -p ipaplatform/*.py %{buildroot}%{python_sitelib}/ipaplatform/

%if %{with server_plugin}
# server-plugin
%__mkdir_p %{buildroot}%{_sbindir}
cp server/ipa-hcc %{buildroot}%{_sbindir}/ipa-hcc
sed -i -e '1 s|^#!.*\bpython[^ ]*|#!%{python}|' %{buildroot}%{_sbindir}/ipa-hcc

%__mkdir_p %{buildroot}%{_mandir}/man1
cp server/man/ipa-hcc.1 %{buildroot}%{_mandir}/man1/

%__mkdir_p %{buildroot}%{python_sitelib}/ipaserver/plugins
cp -p ipaserver/plugins/*.py %{buildroot}%{python_sitelib}/ipaserver/plugins/

%__mkdir_p %{buildroot}%{python_sitelib}/ipaserver/install/
cp -p ipaserver/install/ipa_hcc_cli.py %{buildroot}%{python_sitelib}/ipaserver/install/

%__mkdir_p %{buildroot}%{python_sitelib}/ipaserver/install/plugins
cp -p ipaserver/install/plugins/update_hcc.py %{buildroot}%{python_sitelib}/ipaserver/install/plugins/

%__mkdir_p %buildroot/%{_datadir}/ipa/schema.d
cp -p schema.d/*.ldif %buildroot/%{_datadir}/ipa/schema.d/

%__mkdir_p %buildroot/%{_datadir}/ipa/updates
cp -p updates/85-hcc.update %buildroot/%{_datadir}/ipa/updates/

%__mkdir_p %buildroot/%{_datadir}/ipa/ui/js/plugins
for j in $(find ui/ -name '*.js') ; do
    destdir=%buildroot/%{_datadir}/ipa/ui/js/plugins/$(basename ${j%.js})
    %__mkdir_p $destdir
    %__cp -p $j $destdir/
done

# server-plugin
%endif

%if %{with registration_service}
# registration service
%__mkdir_p %{buildroot}%{_sysconfdir}/ipa/hcc
%__mkdir_p %{buildroot}%{_localstatedir}/cache/ipa-hcc

%__mkdir_p %{buildroot}%{python_sitelib}/ipaserver/install/plugins
cp -p ipaserver/install/plugins/update_hcc_enrollment_service.py %{buildroot}%{python_sitelib}/ipaserver/install/plugins/

cp -p wsgi/hcc_registration_service.py %{buildroot}%{_datadir}/ipa-hcc/

%__mkdir_p %buildroot/%{_datadir}/ipa/updates
cp -p updates/86-hcc-enrollment-service.update %buildroot/%{_datadir}/ipa/updates/

%__mkdir_p %{buildroot}%{_sysconfdir}/httpd/conf.d/
cp etc/apache/ipa-hcc.conf %{buildroot}%{_sysconfdir}/httpd/conf.d/ipa-hcc.conf

%__mkdir_p %{buildroot}%{_sysconfdir}/gssproxy
cp etc/gssproxy/85-ipa-hcc.conf %{buildroot}%{_sysconfdir}/gssproxy/85-ipa-hcc.conf

%__mkdir_p %{buildroot}%{_sharedstatedir}/ipa/gssproxy
touch %{buildroot}%{_sharedstatedir}/ipa/gssproxy/hcc-enrollment.keytab

# registration service
%endif

%if %{with mockapi}
cp -p wsgi/hcc_mockapi.py %{buildroot}%{_datadir}/ipa-hcc/

%__mkdir_p %{buildroot}%{_sysconfdir}/httpd/conf.d/
cp etc/apache/ipa-hcc-mockapi.conf %{buildroot}%{_sysconfdir}/httpd/conf.d/ipa-hcc-mockapi.conf
%endif

# client auto-enrollment
%__mkdir_p %{buildroot}%{python_sitelib}/ipaclient/hcc
cp -p ipaclient/hcc/*.py %{buildroot}%{python_sitelib}/ipaclient/hcc/

%__mkdir_p %{buildroot}%{_unitdir}
cp -p client/ipa-hcc-auto-enrollment.service %{buildroot}%{_unitdir}/
%__mkdir_p %{buildroot}%{_libexecdir}/ipa/hcc/
cp -p client/ipa-hcc-auto-enrollment %{buildroot}%{_libexecdir}/ipa/hcc/

sed -i -e '1 s|^#!.*\bpython[^ ]*|#!%{python}|' %{buildroot}%{_libexecdir}/ipa/hcc/*


%files common
%doc README.md CONTRIBUTORS.txt
%license COPYING
%attr(0644,root,root) %config(noreplace) %{_sysconfdir}/ipa/hcc.conf
%dir %{_datadir}/ipa-hcc/
%{_datadir}/ipa-hcc/redhat-candlepin-bundle.pem
%{_datadir}/ipa-hcc/cacerts
%{python_sitelib}/ipaplatform/*.py*
%if %{with pycache}
%{python_sitelib}/ipaplatform/__pycache__/*.pyc
%endif


%if %{with server_plugin}
%files server-plugin
%doc README.md CONTRIBUTORS.txt
%license COPYING
%{_sbindir}/ipa-hcc
%{_mandir}/man1/ipa-hcc.1*
%{python_sitelib}/ipaserver/plugins/*.py*
%{python_sitelib}/ipaserver/install/*.py*
%{python_sitelib}/ipaserver/install/plugins/update_hcc.py*
%if %{with pycache}
%{python_sitelib}/ipaserver/plugins/__pycache__/*.pyc
%{python_sitelib}/ipaserver/install/__pycache__/*.pyc
%{python_sitelib}/ipaserver/install/plugins/__pycache__/update_hcc.*.pyc
%endif
%{_datadir}/ipa/schema.d/85-hcc.ldif
%{_datadir}/ipa/updates/85-hcc.update
%{_datadir}/ipa/ui/js/plugins/*
%endif


%if %{with registration_service}
%files registration-service
%doc README.md CONTRIBUTORS.txt
%license COPYING
%attr(0750,ipahcc,root) %dir %{_sysconfdir}/ipa/hcc
%attr(0755,ipahcc,ipaapi) %dir %{_localstatedir}/cache/ipa-hcc
%{python_sitelib}/ipaserver/install/plugins/update_hcc_enrollment_service.py*
%if %{with pycache}
%{python_sitelib}/ipaserver/install/plugins/__pycache__/update_hcc_enrollment_service.*.pyc
%endif
%{_datadir}/ipa-hcc/hcc_registration_service.py*
%{_datadir}/ipa/updates/86-hcc-enrollment-service.update
%attr(0644,root,root) %config(noreplace) %{_sysconfdir}/httpd/conf.d/ipa-hcc.conf
%attr(0644,root,root) %config(noreplace) %{_sysconfdir}/gssproxy/85-ipa-hcc.conf
%ghost %{_sharedstatedir}/ipa/gssproxy/hcc-enrollment.keytab
%endif


%if %{with mockapi}
%files mockapi
%doc README.md CONTRIBUTORS.txt
%license COPYING
%{_datadir}/ipa-hcc/hcc_mockapi.py*
%{_datadir}/ipa/updates/86-hcc-enrollment-service.update
%attr(0644,root,root) %config(noreplace) %{_sysconfdir}/httpd/conf.d/ipa-hcc-mockapi.conf
%endif


%files client-enrollment
%doc README.md CONTRIBUTORS.txt
%license COPYING
%{python_sitelib}/ipaclient/hcc/
%attr(0755,root,root) %dir %{_libexecdir}/ipa/hcc
%attr(0755,root,root) %{_libexecdir}/ipa/hcc/ipa-hcc-auto-enrollment
%attr(0644,root,root) %{_unitdir}/ipa-hcc-auto-enrollment.service


%changelog
{{{ git_dir_changelog }}}
